name: build
env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true
  # 禁用任何可能的缓存
  NO_CACHE: true
on:
  push:
    branches:
      - self
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    name: 代码检查
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    env:
      CI: true
    steps:
      - name: 清理工作空间
        run: |
          rm -rf $GITHUB_WORKSPACE/*
          rm -rf $GITHUB_WORKSPACE/.[!.]*
          
      - uses: actions/checkout@v3
      - name: ShellCheck
        run: bash ./check

  macos-test:
    name: macOS 测试
    runs-on: macos-latest
    env:
      CI: true
    steps:
      - name: 完全清理环境
        run: |
          # 清理工作目录
          sudo rm -rf $GITHUB_WORKSPACE/* $GITHUB_WORKSPACE/.[!.]* || true
          
          # 清理临时文件
          sudo rm -rf /tmp/* || true
          
          # 对于macOS runner，清理Homebrew缓存
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            brew cleanup --prune=all || true
            rm -rf ~/Library/Caches/Homebrew/* || true
          fi
          
          # 清理用户目录下可能的配置文件
          rm -rf ~/.zshrc ~/.gitconfig ~/.tmux.conf || true

      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: 安装基础依赖
        run: |
          brew update
          brew install rcm
      
      - name: 运行 bootstrap
        run: bash ./bootstrap
      
      - name: 运行测试
        run: bash ./test
      
      - name: 验证配置文件
        run: |
          test -f ~/.zshrc
          test -f ~/.gitconfig
          test -f ~/.tmux.conf
      
      - name: 验证应用配置
        run: |
          zsh -c "source ~/.zshrc && which nvim"
          zsh -c "source ~/.zshrc && which git"
      
      - name: 生成报告
        if: always()
        run: |
          echo "## 测试结果 - macOS $(sw_vers -productVersion)" > $GITHUB_STEP_SUMMARY
          echo "- 操作系统: $(sw_vers -productName) $(sw_vers -productVersion)" >> $GITHUB_STEP_SUMMARY
          echo "- Homebrew: $(brew --version | head -n 1)" >> $GITHUB_STEP_SUMMARY
          echo "- 已安装包数量: $(brew list | wc -l | xargs)" >> $GITHUB_STEP_SUMMARY
          
          # 添加详细测试结果
          echo "### 应用测试结果" >> $GITHUB_STEP_SUMMARY
          for app in zsh git ssh gpg go rust ruby java node vim nvim tmux fzf VSCode; do
            if [ -f "./app/$app/test" ]; then
              if bash "./app/$app/test" &>/dev/null; then
                echo "- $app: ✅" >> $GITHUB_STEP_SUMMARY
              else
                echo "- $app: ❌" >> $GITHUB_STEP_SUMMARY
              fi
            else
              echo "- $app: ⚠️ (无测试)" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "- dotfiles 状态: $(if [ $? -eq 0 ]; then echo '✅ 成功'; else echo '❌ 失败'; fi)" >> $GITHUB_STEP_SUMMARY
