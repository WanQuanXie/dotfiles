#!/usr/bin/env bash

echo "Setup SSH"
mkdir -p ~/.ssh
cp ./app/ssh/config ~/.ssh/config
chmod 600 ~/.ssh/config

# 检查是否已存在密钥
if [ ! -f ~/.ssh/id_ed25519 ]; then
    ssh-keygen -t ed25519 -C "i2cherry941219@gmail.com" -f ~/.ssh/id_ed25519 -N ""
else
    echo "SSH key already exists, skipping generation"
fi

# 确保 ssh-agent 正在运行
eval "$(ssh-agent -s)"

# 添加密钥到 ssh-agent 并存储密码到钥匙串
ssh-add --apple-use-keychain ~/.ssh/id_ed25519

# 复制公钥到剪贴板
pbcopy < ~/.ssh/id_ed25519.pub
echo "Public key copied to clipboard. Please add it to your GitHub account." # 请将公钥添加到 GitHub 账号
echo "Visit: https://github.com/settings/keys to add your key" # 访问 https://github.com/settings/keys 添加公钥

# 测试连接到 GitHub (脚本不做测试，待用户配置 ssh key 到 GitHub 账号后再手动测试)
# echo "Testing connection to GitHub..."
# ssh -T git@github.com -o StrictHostKeyChecking=accept-new || true

# 添加到 shell 配置文件以确保 SSH agent 在登录时启动
if ! grep -q "ssh-agent" ~/.zshrc; then
    echo "Adding SSH agent startup to ~/.zshrc"
    cat >> ~/.zshrc << 'EOF'

# Start SSH agent
if [ -z "$SSH_AUTH_SOCK" ]; then
    eval "$(ssh-agent -s)" > /dev/null
    ssh-add --apple-use-keychain ~/.ssh/id_ed25519 2>/dev/null
fi
EOF
fi

echo "SSH setup completed"
