# If you come from bash you might have to change your $PATH.
export PATH=/opt/homebrew/opt/python@3.13/libexec/bin:$HOME/bin:/usr/local/bin:/opt/homebrew/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="spaceship"
# ZSH_THEME="ys"
ZSH_THEME="crispy"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
export UPDATE_ZSH_DAYS=30
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(docker eza git macos redis-cli zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
   export EDITOR='nvim'
# fi

# allow the respect for LS_COLORS
export LS_COLORS=gxfxaxdxcxegedabagacad

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Alias
source ~/.zsh_alias

# fnm
eval "$(fnm env --corepack-enabled --resolve-engines --use-on-cd --shell zsh)"

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# curl
export PATH="$(brew --prefix)/opt/curl/bin:$PATH"
export LDFLAGS="-L$(brew --prefix)/opt/curl/lib"
export CPPFLAGS="-I$(brew --prefix)/opt/curl/include"

# zoxide
eval "$(zoxide init zsh)"

# bat
export BAT_THEME=Nord

# zsh-syntax-highlighting
source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# zsh-autosuggestions
#source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# zsh-completions
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH

  autoload -Uz compinit
  compinit
fi

# 配置终端 starship 主题
eval "$(starship init zsh)"

# Electron
#export ELECTRON_GET_USE_PROXY="http://127.0.0.1:7890"
export ELECTRON_MIRROR="https://npmmirror.com/mirrors/electron/"
#export ELECTRON_CUSTOM_DIR="{{ version }}"

# Java
#JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-1.8.jdk/Contents/Home
#CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:.
#PATH=$JAVA_HOME/bin:$PATH:.

#export JAVA_HOME
#export CLASSPATH
#export PATH

# Maven
#export M2_HOME=/Users/$USER/Workspace/tools/apache-maven-3.9.6
#export PATH=$PATH:$M2_HOME/bin

# flutter
export PUB_HOSTED_URL="https://pub.flutter-io.cn"
export FLUTTER_STORAGE_BASE_URL="https://storage.flutter-io.cn"
export PATH="/Users/xiewq/Workspace/tools/flutter/bin:$PATH"
export NO_PROXY=localhost,127.0.0.1,::1

# ruby
export PATH="$(brew --prefix)/opt/ruby/bin:$PATH"
export LDFLAGS="-L$(brew --prefix)/opt/ruby/lib"
export CPPFLAGS="-I$(brew --prefix)/opt/ruby/include"
export GEM_HOME=$HOME/.gem
export PATH=$GEM_HOME/bin:$PATH

# Global NPM
export NPM_BIN=$HOME/npmbin/node_modules/.bin
export PATH=$NPM_BIN:$PATH

# ollama
# ollama 允许最大加载的模型数，“0” 表示动态根据内存调整
export OLLAMA_MAX_LOADED_MODELS=0
# ollama 允许同时处理的客户端请求数，“0”表示动态根据内存调整
export OLLAMA_NUM_PARALLEL=0

# Cargo
export CARGO_HOME=~/.cargo/bin
export PATH=$CARGO_HOME:$PATH


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
